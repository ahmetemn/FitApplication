// <auto-generated />
using System;
using Di_Station.REPO.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Di_Station.REPO.Migrations
{
    [DbContext(typeof(DietContext))]
    [Migration("20240131095705_UserRoles")]
    partial class UserRoles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Di_Station.DATA.Concrete.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Kategori_Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KategoriAdi");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Kategori", (string)null);
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.Meal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Ogun_Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("OgunAdi");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Ogun", (string)null);
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.Portion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Porsiyon_Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Scale")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PorsiyonOlcegi");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Porsiyon", (string)null);
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Urun_Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<decimal>("Calorie")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Kalori");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("Fiyat");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("UrunAdi");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Urunler", (string)null);
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.TypeOfFood", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("YemekCesidi_ID")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Fiyat");

                    b.Property<decimal>("Kalori")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Kalori");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("YemekAdi");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Yemek Cesidi", (string)null);
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_Id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ad");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Soyad");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KullaniciSifre");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Roles");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserDetailId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KullaniciAdi");

                    b.HasKey("ID");

                    b.HasIndex("UserDetailId")
                        .IsUnique();

                    b.ToTable("Kullanıcılar", (string)null);
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.UserDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Age")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Yas")
                        .HasComputedColumnSql("DATEDIFF(YEAR, DogumTarihi, GETDATE())");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime")
                        .HasColumnName("DogumTarihi");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Sehir");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("Cinsiyet");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Boy");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Meslek");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Kilo");

                    b.HasKey("ID");

                    b.ToTable("UserDetail");
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.UserOgunYemekCesidi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("UserOgunYemekCesidiId")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("YemekCesidiPorsiyonOgun_Id")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.HasIndex("YemekCesidiPorsiyonOgun_Id");

                    b.ToTable("UserOgunYemekCesit", (string)null);
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.YemekCesidiPorsiyonOgun", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("YemekCesidiPorsiyonOgun_Id ")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OgunId")
                        .HasColumnType("integer");

                    b.Property<int>("Porsiyon_Id")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("YemekCesidi_ID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("OgunId");

                    b.HasIndex("Porsiyon_Id");

                    b.HasIndex("YemekCesidi_ID");

                    b.ToTable("YemekCesidiPorsiyonOgun", (string)null);
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.YemekCesidiUrun", b =>
                {
                    b.Property<int>("YemekCesiId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("YemekCesiId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("YemekCesidiUrun", (string)null);
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.YemekKategori", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("integer")
                        .HasColumnName("Id")
                        .HasColumnOrder(1);

                    b.Property<int>("KategoriId")
                        .HasColumnType("integer");

                    b.Property<int>("YemekCesidi_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID", "KategoriId", "YemekCesidi_Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("YemekCesidi_Id")
                        .IsUnique();

                    b.ToTable("YemekKategori", (string)null);
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.User", b =>
                {
                    b.HasOne("Di_Station.DATA.Concrete.UserDetail", "UserDetail")
                        .WithOne("User")
                        .HasForeignKey("Di_Station.DATA.Concrete.User", "UserDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserDetail");
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.UserOgunYemekCesidi", b =>
                {
                    b.HasOne("Di_Station.DATA.Concrete.User", "User")
                        .WithMany("UserOgunYemekCesidis")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Di_Station.DATA.Concrete.YemekCesidiPorsiyonOgun", "YemekCesidiPorsiyonOgun")
                        .WithMany()
                        .HasForeignKey("YemekCesidiPorsiyonOgun_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("YemekCesidiPorsiyonOgun");
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.YemekCesidiPorsiyonOgun", b =>
                {
                    b.HasOne("Di_Station.DATA.Concrete.Meal", "Meal")
                        .WithMany("YemekCesidiPorsiyonOguns")
                        .HasForeignKey("OgunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Di_Station.DATA.Concrete.Portion", "Portion")
                        .WithMany("YemekCesidiPorsiyonOguns")
                        .HasForeignKey("Porsiyon_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Di_Station.DATA.Concrete.TypeOfFood", "TypeOfFood")
                        .WithMany("YemekCesidiPorsiyonOguns")
                        .HasForeignKey("YemekCesidi_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("Portion");

                    b.Navigation("TypeOfFood");
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.YemekCesidiUrun", b =>
                {
                    b.HasOne("Di_Station.DATA.Concrete.Product", "Product")
                        .WithMany("YemekCesidiUruns")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Di_Station.DATA.Concrete.TypeOfFood", "TypeOfFood")
                        .WithMany("yemekCesidiUruns")
                        .HasForeignKey("YemekCesiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("TypeOfFood");
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.YemekKategori", b =>
                {
                    b.HasOne("Di_Station.DATA.Concrete.Category", "Category")
                        .WithMany("YemekKategoris")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Di_Station.DATA.Concrete.TypeOfFood", "TypeOfFood")
                        .WithMany("YemekKategoris")
                        .HasForeignKey("YemekCesidi_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("TypeOfFood");
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.Category", b =>
                {
                    b.Navigation("YemekKategoris");
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.Meal", b =>
                {
                    b.Navigation("YemekCesidiPorsiyonOguns");
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.Portion", b =>
                {
                    b.Navigation("YemekCesidiPorsiyonOguns");
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.Product", b =>
                {
                    b.Navigation("YemekCesidiUruns");
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.TypeOfFood", b =>
                {
                    b.Navigation("YemekCesidiPorsiyonOguns");

                    b.Navigation("YemekKategoris");

                    b.Navigation("yemekCesidiUruns");
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.User", b =>
                {
                    b.Navigation("UserOgunYemekCesidis");
                });

            modelBuilder.Entity("Di_Station.DATA.Concrete.UserDetail", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
